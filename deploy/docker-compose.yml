version: '3.8'

services:

  resources-service:
    build:
      context: ../resources-service
      dockerfile: ../resources-service/Dockerfile
    environment:
      - DB_HOST=${RESOURCE_DB_HOST}
      - DB_USER=${RESOURCE_DB_USER}
      - DB_PASS=${RESOURCE_DB_PASS}
      - DB_PORT=${RESOURCE_DB_PORT}

  resources-service-db:
    image: postgres:14.1-alpine
    restart: always
    environment:
      - POSTGRES_USER=${RESOURCE_DB_USER}
      - POSTGRES_PASSWORD=${RESOURCE_DB_PASS}
    ports:
      - ${RESOURCE_DB_PORT}:5432
    volumes:
      - resources-data:/var/lib/postgresql/data

  booking-service-db:
    image: postgres:14.1-alpine
    restart: always
    environment:
      - POSTGRES_USER=${BOOKING_DB_USER}
      - POSTGRES_PASSWORD=${BOOKING_DB_PASS}
    ports:
      - '${BOOKING_DB_PORT}:5432'
    volumes:
      - booking-data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5

  db-migrate:
    image: ghcr.io/kukymbr/goose-docker:3.15.1
    env_file:
      - .env
    environment:
      - GOOSE_DRIVER=postgres
      - GOOSE_DBSTRING=host=${DB_HOST} port=${DB_PORT} user=${DB_USER} password=${DB_PASS} dbname=${DB_NAME}
    volumes:
      - ../${SERVICE_NAME}/migrations:/migrations:z

volumes:

  resources-data:
    driver: local

  booking-data:
    driver: local